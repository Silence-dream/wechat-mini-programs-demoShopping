"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const index_1 = require("../../request/index");
Page({
    data: {
        leftMenuList: [],
        rightConent: [],
        currentIndex: 0,
        scrollTop: 0,
    },
    Cates: [],
    onLoad() {
        const Cates = wx.getStorageSync("cates");
        if (!Cates) {
            this.getCates();
        }
        else {
            const timeStorage = wx.getStorageSync("cates").time;
            const diffTime = Date.now() - timeStorage;
            if (diffTime > 1000 * 60 * 5) {
                this.getCates();
            }
            else {
                this.Cates = wx.getStorageSync("cates").data;
                const leftMenuList = this.Cates.map((item) => {
                    return item.cat_name;
                });
                const rightConent = this.Cates.map((item) => {
                    return item.children;
                });
                const leftMenuListD = leftMenuList;
                const rightConentD = rightConent;
                this.setData({
                    leftMenuList: leftMenuListD,
                    rightConent: rightConentD[0],
                });
            }
        }
    },
    getCates() {
        index_1.request({
            url: "https://api-hmugo-web.itheima.net/api/public/v1/categories",
        }).then((result) => {
            this.Cates = result.data.message;
            wx.setStorageSync("cates", {
                time: Date.now(),
                data: this.Cates,
            });
            const leftMenuList = this.Cates.map((item) => {
                return item.cat_name;
            });
            const rightConent = this.Cates.map((item) => {
                return item.children;
            });
            const leftMenuListD = leftMenuList;
            const rightConentD = rightConent;
            this.setData({
                leftMenuList: leftMenuListD,
                rightConent: rightConentD[0],
            });
        });
    },
    handCurrent(e) {
        const { index } = e.currentTarget.dataset;
        const rightConent = this.Cates.map((item) => {
            return item.children;
        });
        const rightConentD = rightConent;
        this.setData({
            rightConent: rightConentD[index],
            currentIndex: index,
            scrollTop: 0,
        });
    },
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJpbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUNBLCtDQUE4QztBQUU5QyxJQUFJLENBQUM7SUFDSCxJQUFJLEVBQUU7UUFFSixZQUFZLEVBQUUsRUFBRTtRQUVoQixXQUFXLEVBQUUsRUFBRTtRQUVmLFlBQVksRUFBRSxDQUFDO1FBRWYsU0FBUyxFQUFFLENBQUM7S0FDYjtJQUVELEtBQUssRUFBRSxFQUFFO0lBQ1QsTUFBTTtRQUVKLE1BQU0sS0FBSyxHQUFHLEVBQUUsQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFDLENBQUM7UUFFekMsSUFBSSxDQUFDLEtBQUssRUFBRTtZQUdWLElBQUksQ0FBQyxRQUFRLEVBQUUsQ0FBQztTQUNqQjthQUFNO1lBSUwsTUFBTSxXQUFXLEdBQVcsRUFBRSxDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUM7WUFFNUQsTUFBTSxRQUFRLEdBQVcsSUFBSSxDQUFDLEdBQUcsRUFBRSxHQUFHLFdBQVcsQ0FBQztZQUVsRCxJQUFJLFFBQVEsR0FBRyxJQUFJLEdBQUcsRUFBRSxHQUFHLENBQUMsRUFBRTtnQkFFNUIsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO2FBQ2pCO2lCQUFNO2dCQUdMLElBQUksQ0FBQyxLQUFLLEdBQUcsRUFBRSxDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxJQUFJLENBQUM7Z0JBQzdDLE1BQU0sWUFBWSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBZ0IsRUFBRSxFQUFFO29CQUN2RCxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7Z0JBQ3ZCLENBQUMsQ0FBQyxDQUFDO2dCQUNILE1BQU0sV0FBVyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsSUFBZ0IsRUFBRSxFQUFFO29CQUN0RCxPQUFPLElBQUksQ0FBQyxRQUFRLENBQUM7Z0JBQ3ZCLENBQUMsQ0FBQyxDQUFDO2dCQUVILE1BQU0sYUFBYSxHQUFHLFlBQXVCLENBQUM7Z0JBQzlDLE1BQU0sWUFBWSxHQUFHLFdBQXNCLENBQUM7Z0JBRTVDLElBQUksQ0FBQyxPQUFPLENBQUM7b0JBQ1gsWUFBWSxFQUFFLGFBQWE7b0JBQzNCLFdBQVcsRUFBRSxZQUFZLENBQUMsQ0FBQyxDQUFDO2lCQUM3QixDQUFDLENBQUM7YUFFSjtTQUNGO0lBQ0gsQ0FBQztJQUVELFFBQVE7UUFDTixlQUFPLENBQUM7WUFDTixHQUFHLEVBQUUsNERBQTREO1NBQ2xFLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxNQUFxQixFQUFFLEVBQUU7WUFFaEMsSUFBSSxDQUFDLEtBQUssR0FBRyxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQztZQUVqQyxFQUFFLENBQUMsY0FBYyxDQUFDLE9BQU8sRUFBRTtnQkFDekIsSUFBSSxFQUFFLElBQUksQ0FBQyxHQUFHLEVBQUU7Z0JBQ2hCLElBQUksRUFBRSxJQUFJLENBQUMsS0FBSzthQUNqQixDQUFDLENBQUM7WUFDSCxNQUFNLFlBQVksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQWdCLEVBQUUsRUFBRTtnQkFDdkQsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO1lBQ3ZCLENBQUMsQ0FBQyxDQUFDO1lBQ0gsTUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFnQixFQUFFLEVBQUU7Z0JBQ3RELE9BQU8sSUFBSSxDQUFDLFFBQVEsQ0FBQztZQUN2QixDQUFDLENBQUMsQ0FBQztZQUVILE1BQU0sYUFBYSxHQUFHLFlBQXVCLENBQUM7WUFDOUMsTUFBTSxZQUFZLEdBQUcsV0FBc0IsQ0FBQztZQUU1QyxJQUFJLENBQUMsT0FBTyxDQUFDO2dCQUNYLFlBQVksRUFBRSxhQUFhO2dCQUMzQixXQUFXLEVBQUUsWUFBWSxDQUFDLENBQUMsQ0FBQzthQUM3QixDQUFDLENBQUM7UUFDTCxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFRCxXQUFXLENBQUMsQ0FBTTtRQUNoQixNQUFNLEVBQUUsS0FBSyxFQUFFLEdBQUcsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxPQUFPLENBQUM7UUFFMUMsTUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFnQixFQUFFLEVBQUU7WUFDdEQsT0FBTyxJQUFJLENBQUMsUUFBUSxDQUFDO1FBQ3ZCLENBQUMsQ0FBQyxDQUFDO1FBRUgsTUFBTSxZQUFZLEdBQUcsV0FBc0IsQ0FBQztRQUU1QyxJQUFJLENBQUMsT0FBTyxDQUFDO1lBQ1gsV0FBVyxFQUFFLFlBQVksQ0FBQyxLQUFLLENBQUM7WUFFaEMsWUFBWSxFQUFFLEtBQUs7WUFFbkIsU0FBUyxFQUFFLENBQUM7U0FDYixDQUFDLENBQUM7SUFFTCxDQUFDO0NBQ0YsQ0FBQyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8g5byV5YWl6K+35rGC5pa55rOVXG5pbXBvcnQgeyByZXF1ZXN0IH0gZnJvbSBcIi4uLy4uL3JlcXVlc3QvaW5kZXhcIjtcbmltcG9ydCB7IFJlc3BvbnNlUHJvcHMsIENhdGVzUHJvcHMgfSBmcm9tIFwiLi4vLi4vc3RvcmUvc3RvcmVcIjtcblBhZ2Uoe1xuICBkYXRhOiB7XG4gICAgLy8g5bem5L6n6I+c5Y2V5pWw5o2uXG4gICAgbGVmdE1lbnVMaXN0OiBbXSxcbiAgICAvLyDlj7PkvqfllYblk4HmlbDmja5cbiAgICByaWdodENvbmVudDogW10sXG4gICAgLy8g6K6p5bem5L6n6I+c5Y2V6YCJ5Lit5re75Yqg5qC35byP55qE57Si5byVXG4gICAgY3VycmVudEluZGV4OiAwLFxuICAgIC8vIOWPs+S+p+iPnOWNlea7keWKqOi3neemu+mhtumDqOeahOi3neemu1xuICAgIHNjcm9sbFRvcDogMCxcbiAgfSxcbiAgLyog57yT5a2Y5YC8IOWVhuWTgeaVsOaNriAqL1xuICBDYXRlczogW10sXG4gIG9uTG9hZCgpIHtcbiAgICAvKiDliIbnsbvllYblk4HmlbDmja7nvJPlrZggKi9cbiAgICBjb25zdCBDYXRlcyA9IHd4LmdldFN0b3JhZ2VTeW5jKFwiY2F0ZXNcIik7XG4gICAgLy8g5aaC5p6c5pys5Zyw5a2Y5YKo6YeM6Z2i5rKh5pyJ5pWw5o2u6YKj5LmI5bCx5Y+R6LW36K+35rGC6I635Y+WXG4gICAgaWYgKCFDYXRlcykge1xuICAgICAgLy8gY29uc29sZS5sb2coIUNhdGVzKTtcbiAgICAgIC8vIGNvbnNvbGUubG9nKFwi5pys5Zyw5a2Y5YKo6YeM6Z2i5rKh5pyJ5pWw5o2uXCIpO1xuICAgICAgdGhpcy5nZXRDYXRlcygpO1xuICAgIH0gZWxzZSB7XG4gICAgICAvLyDlpoLmnpzmnInmnKzlnLDlrZjlgqjph4zpnaLmnInmlbDmja7pgqPkuYjlsLHosIPnlKjmlbDmja5cblxuICAgICAgLy8g5pys5Zyw5a2Y5YKo6YeM6Z2i55qE5pe26Ze0XG4gICAgICBjb25zdCB0aW1lU3RvcmFnZTogbnVtYmVyID0gd3guZ2V0U3RvcmFnZVN5bmMoXCJjYXRlc1wiKS50aW1lO1xuICAgICAgLy8g5pys5Zyw5a2Y5YKo5a2Y6L+b5Y6755qE5pe26Ze05ZKM5b2T5YmN55qE5pe26Ze05beuXG4gICAgICBjb25zdCBkaWZmVGltZTogbnVtYmVyID0gRGF0ZS5ub3coKSAtIHRpbWVTdG9yYWdlO1xuICAgICAgLy8g5aSn5LqO6L+Z5Liq5pe26Ze05bCx6YeN5paw6I635Y+W5LiA5qyh5pWw5o2uXG4gICAgICBpZiAoZGlmZlRpbWUgPiAxMDAwICogNjAgKiA1KSB7XG4gICAgICAgIC8vIGNvbnNvbGUubG9nKFwi6K+l6YeN5paw6I635Y+W5LiA5qyh5pWw5o2u5LqGXCIpO1xuICAgICAgICB0aGlzLmdldENhdGVzKCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyDlsI/kuo7ov5nkuKrml7bpl7TlsLHnm7TmjqXosIPnlKjmnKzlnLDlrZjlgqjph4zpnaLnmoTmlbDmja5cbiAgICAgICAgLy8jcmVnaW9uIOS/neWtmOaVsOaNrlxuICAgICAgICB0aGlzLkNhdGVzID0gd3guZ2V0U3RvcmFnZVN5bmMoXCJjYXRlc1wiKS5kYXRhO1xuICAgICAgICBjb25zdCBsZWZ0TWVudUxpc3QgPSB0aGlzLkNhdGVzLm1hcCgoaXRlbTogQ2F0ZXNQcm9wcykgPT4ge1xuICAgICAgICAgIHJldHVybiBpdGVtLmNhdF9uYW1lO1xuICAgICAgICB9KTtcbiAgICAgICAgY29uc3QgcmlnaHRDb25lbnQgPSB0aGlzLkNhdGVzLm1hcCgoaXRlbTogQ2F0ZXNQcm9wcykgPT4ge1xuICAgICAgICAgIHJldHVybiBpdGVtLmNoaWxkcmVuO1xuICAgICAgICB9KTtcbiAgICAgICAgLyog57G75Z6L5pat6KiAICovXG4gICAgICAgIGNvbnN0IGxlZnRNZW51TGlzdEQgPSBsZWZ0TWVudUxpc3QgYXMgbmV2ZXJbXTtcbiAgICAgICAgY29uc3QgcmlnaHRDb25lbnREID0gcmlnaHRDb25lbnQgYXMgbmV2ZXJbXTtcbiAgICAgICAgLy8g5L+d5a2Y5bem5L6n6I+c5Y2V5pWw5o2u5ZKM5Y+z5L6n6I+c5Y2V5pWw5o2uXG4gICAgICAgIHRoaXMuc2V0RGF0YSh7XG4gICAgICAgICAgbGVmdE1lbnVMaXN0OiBsZWZ0TWVudUxpc3RELFxuICAgICAgICAgIHJpZ2h0Q29uZW50OiByaWdodENvbmVudERbMF0sXG4gICAgICAgIH0pO1xuICAgICAgICAvLyNlbmRyZWdpb25cbiAgICAgIH1cbiAgICB9XG4gIH0sXG4gIC8vIOiOt+WPluWIhumhteaVsOaNrlxuICBnZXRDYXRlcygpIHtcbiAgICByZXF1ZXN0KHtcbiAgICAgIHVybDogXCJodHRwczovL2FwaS1obXVnby13ZWIuaXRoZWltYS5uZXQvYXBpL3B1YmxpYy92MS9jYXRlZ29yaWVzXCIsXG4gICAgfSkudGhlbigocmVzdWx0OiBSZXNwb25zZVByb3BzKSA9PiB7XG4gICAgICAvLyDkv53lrZjlgLzliLDnvJPlrZjlj5jph4/ph4zpnaJcbiAgICAgIHRoaXMuQ2F0ZXMgPSByZXN1bHQuZGF0YS5tZXNzYWdlO1xuICAgICAgLyog5L+d5a2Y5YC85Yiw5pys5Zyw5a2Y5YKo6YeM6Z2iICovXG4gICAgICB3eC5zZXRTdG9yYWdlU3luYyhcImNhdGVzXCIsIHtcbiAgICAgICAgdGltZTogRGF0ZS5ub3coKSxcbiAgICAgICAgZGF0YTogdGhpcy5DYXRlcyxcbiAgICAgIH0pO1xuICAgICAgY29uc3QgbGVmdE1lbnVMaXN0ID0gdGhpcy5DYXRlcy5tYXAoKGl0ZW06IENhdGVzUHJvcHMpID0+IHtcbiAgICAgICAgcmV0dXJuIGl0ZW0uY2F0X25hbWU7XG4gICAgICB9KTtcbiAgICAgIGNvbnN0IHJpZ2h0Q29uZW50ID0gdGhpcy5DYXRlcy5tYXAoKGl0ZW06IENhdGVzUHJvcHMpID0+IHtcbiAgICAgICAgcmV0dXJuIGl0ZW0uY2hpbGRyZW47XG4gICAgICB9KTtcbiAgICAgIC8qIOexu+Wei+aWreiogCAqL1xuICAgICAgY29uc3QgbGVmdE1lbnVMaXN0RCA9IGxlZnRNZW51TGlzdCBhcyBuZXZlcltdO1xuICAgICAgY29uc3QgcmlnaHRDb25lbnREID0gcmlnaHRDb25lbnQgYXMgbmV2ZXJbXTtcbiAgICAgIC8vIOS/neWtmOW3puS+p+iPnOWNleaVsOaNruWSjOWPs+S+p+iPnOWNleaVsOaNrlxuICAgICAgdGhpcy5zZXREYXRhKHtcbiAgICAgICAgbGVmdE1lbnVMaXN0OiBsZWZ0TWVudUxpc3RELFxuICAgICAgICByaWdodENvbmVudDogcmlnaHRDb25lbnREWzBdLFxuICAgICAgfSk7XG4gICAgfSk7XG4gIH0sXG4gIC8vIOeCueWHu+WIh+aNouWVhuWTgeWIhuexu1xuICBoYW5kQ3VycmVudChlOiBhbnkpIHtcbiAgICBjb25zdCB7IGluZGV4IH0gPSBlLmN1cnJlbnRUYXJnZXQuZGF0YXNldDtcbiAgICAvLyNyZWdpb24g5Y+z5L6n5YiG57G75YiH5o2iXG4gICAgY29uc3QgcmlnaHRDb25lbnQgPSB0aGlzLkNhdGVzLm1hcCgoaXRlbTogQ2F0ZXNQcm9wcykgPT4ge1xuICAgICAgcmV0dXJuIGl0ZW0uY2hpbGRyZW47XG4gICAgfSk7XG4gICAgLyog57G75Z6L5pat6KiAICovXG4gICAgY29uc3QgcmlnaHRDb25lbnREID0gcmlnaHRDb25lbnQgYXMgbmV2ZXJbXTtcbiAgICAvLyDkv53lrZjlt6bkvqfoj5zljZXmlbDmja7lkozlj7Pkvqfoj5zljZXmlbDmja5cbiAgICB0aGlzLnNldERhdGEoe1xuICAgICAgcmlnaHRDb25lbnQ6IHJpZ2h0Q29uZW50RFtpbmRleF0sXG4gICAgICAvLyDlt6bkvqfoj5zljZXpgInkuK3moLflvI/liIfmjaJcbiAgICAgIGN1cnJlbnRJbmRleDogaW5kZXgsXG4gICAgICAvLyDngrnlh7vlt6bkvqfoj5zljZXorqnlj7Povrnoj5zljZXot53nprvpobbpg6jnmoTot53nprvkuLowXG4gICAgICBzY3JvbGxUb3A6IDAsXG4gICAgfSk7XG4gICAgLy8jZW5kcmVnaW9uXG4gIH0sXG59KTtcbiJdfQ==